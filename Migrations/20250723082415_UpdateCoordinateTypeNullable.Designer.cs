// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using geoproject.Data;

#nullable disable

namespace geoproject.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250723082415_UpdateCoordinateTypeNullable")]
    partial class UpdateCoordinateTypeNullable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("geoproject.Models.Point", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CoordinateType")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(1);

                    b.Property<string>("Geometry")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)")
                        .HasComment("Coordinate values based on CoordinateType (Point: 'x y', Line: 'x1 y1, x2 y2', Polygon: 'x1 y1, x2 y2, ...')");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("CoordinateType");

                    b.HasIndex("Geometry");

                    b.ToTable("Points");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CoordinateType = 1,
                            Geometry = "28.9784 41.0082",
                            Name = "Istanbul"
                        },
                        new
                        {
                            Id = 2,
                            CoordinateType = 1,
                            Geometry = "32.8597 39.9334",
                            Name = "Ankara"
                        },
                        new
                        {
                            Id = 3,
                            CoordinateType = 2,
                            Geometry = "28.9784 41.0082, 32.8597 39.9334",
                            Name = "Istanbul-Ankara Route"
                        },
                        new
                        {
                            Id = 4,
                            CoordinateType = 3,
                            Geometry = "28.5 40.5, 29.5 40.5, 29.5 41.5, 28.5 41.5, 28.5 40.5",
                            Name = "Istanbul Region"
                        },
                        new
                        {
                            Id = 5,
                            CoordinateType = 3,
                            Geometry = "35.0 41.0, 36.0 41.5, 36.5 42.5, 36.0 43.5, 35.0 44.0, 34.0 43.0, 34.5 42.0, 35.0 41.0",
                            Name = "Heptagon Example"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
